volatile boolean ledOn = false;
int Lane1[] = {13,12,11};
int Lane2[] = {10,9,8};
int Lane3[] = {7,6,5};
int Lane4[] = {4,3,1};

 

void setup() 
{
  
  pinMode(0,OUTPUT);
  pinMode(2,INPUT);
  attachInterrupt(0,buttonPressed,RISING);
 
  for (int i = 0; i < 3; i++)
  {
    pinMode(Lane1[i], OUTPUT); 
    pinMode(Lane2[i], OUTPUT);
    pinMode(Lane3[i], OUTPUT);
    pinMode(Lane4[i], OUTPUT);
  }
 

  for (int i = 0; i < 3; i++)
  {
    digitalWrite(Lane1[i], LOW); 
    digitalWrite(Lane2[i], LOW);
    digitalWrite(Lane3[i], LOW);
    digitalWrite(Lane4[i], LOW);
  }
  
}

void check()
{
  if(ledOn==HIGH)
  {
    allRed();    
  }
}

void normal()
{
  digitalWrite(Lane1[2], HIGH); 
  digitalWrite(Lane3[0], HIGH);
  digitalWrite(Lane4[0], HIGH);
  digitalWrite(Lane2[0], HIGH);
  
  digitalWrite(Lane1[1], LOW); 
  digitalWrite(Lane3[1], LOW);
  digitalWrite(Lane4[1], LOW);
  digitalWrite(Lane2[1], LOW); 
   
  digitalWrite(Lane1[0], LOW); 
  digitalWrite(Lane3[2], LOW);
  digitalWrite(Lane4[2], LOW);
  digitalWrite(Lane2[2], LOW);
  check(); 
  delay(7000); 
  check();
  digitalWrite(Lane1[2], LOW);
  digitalWrite(Lane1[1], HIGH);
  digitalWrite(Lane1[0], LOW);

  digitalWrite(Lane3[0], LOW);
  digitalWrite(Lane3[1], HIGH);
  digitalWrite(Lane3[2], LOW);  

  digitalWrite(Lane2[0], HIGH);
  digitalWrite(Lane2[1], LOW);
  digitalWrite(Lane2[2], LOW);
  
  digitalWrite(Lane4[0], HIGH);
  digitalWrite(Lane4[1], LOW);
  digitalWrite(Lane4[2], LOW);
  check();
  delay(3000);
  check();
  digitalWrite(Lane1[0], HIGH);
  digitalWrite(Lane1[1], LOW);
  digitalWrite(Lane1[2], LOW); 

  digitalWrite(Lane3[0], LOW);
  digitalWrite(Lane3[1], LOW);
  digitalWrite(Lane3[2], HIGH); 

  digitalWrite(Lane2[0], HIGH);
  digitalWrite(Lane2[1], LOW);
  digitalWrite(Lane2[2], LOW); 

  digitalWrite(Lane4[0], HIGH);
  digitalWrite(Lane4[1], LOW);
  digitalWrite(Lane4[2], LOW);  
  
  check();
  delay(7000);
  check();
  digitalWrite(Lane2[0], HIGH);
  digitalWrite(Lane2[1], LOW);
  digitalWrite(Lane2[2], LOW);

  digitalWrite(Lane3[0], LOW);
  digitalWrite(Lane3[1], HIGH);
  digitalWrite(Lane3[2], LOW);

  digitalWrite(Lane4[0], LOW);
  digitalWrite(Lane4[1], HIGH);
  digitalWrite(Lane4[2], LOW);

  digitalWrite(Lane1[0], HIGH);
  digitalWrite(Lane1[1], LOW);
  digitalWrite(Lane1[2], LOW);
  
  check();
  delay(3000);
  check();
  digitalWrite(Lane2[0], HIGH);
  digitalWrite(Lane2[1], LOW);
  digitalWrite(Lane2[2], LOW);

  digitalWrite(Lane3[0], HIGH);
  digitalWrite(Lane3[1], LOW);
  digitalWrite(Lane3[2], LOW);

  digitalWrite(Lane1[0], HIGH);
  digitalWrite(Lane1[1], LOW);
  digitalWrite(Lane1[2], LOW);

  digitalWrite(Lane4[0], LOW);
  digitalWrite(Lane4[1], LOW);
  digitalWrite(Lane4[2], HIGH);
  
  check();
  delay(7000);
  check();
  digitalWrite(Lane2[0], LOW);
  digitalWrite(Lane2[1], HIGH);
  digitalWrite(Lane2[2], LOW);  

  digitalWrite(Lane1[0], HIGH);
  digitalWrite(Lane1[1], LOW);
  digitalWrite(Lane1[2], LOW);

  digitalWrite(Lane3[0], HIGH);
  digitalWrite(Lane3[1], LOW);
  digitalWrite(Lane3[2], LOW);

  digitalWrite(Lane4[0], LOW);
  digitalWrite(Lane4[1], HIGH);
  digitalWrite(Lane4[2], LOW);
  
  check();
  delay(3000);
  check();
  digitalWrite(Lane2[0], LOW);
  digitalWrite(Lane2[1], LOW);
  digitalWrite(Lane2[2], HIGH);

  digitalWrite(Lane3[0], HIGH);
  digitalWrite(Lane3[1], LOW);
  digitalWrite(Lane3[2], LOW);

  digitalWrite(Lane1[0], HIGH);
  digitalWrite(Lane1[1], LOW);
  digitalWrite(Lane1[2], LOW); 
  
  digitalWrite(Lane4[0], HIGH);
  digitalWrite(Lane4[1], LOW);
  digitalWrite(Lane4[2], LOW);

  check();
  delay(7000);
  check();
    
  digitalWrite(Lane3[0], HIGH);
  digitalWrite(Lane3[1], LOW);
  digitalWrite(Lane3[2], LOW); 
  
  digitalWrite(Lane4[0], HIGH);
  digitalWrite(Lane4[1], LOW);
  digitalWrite(Lane4[2], LOW);

  digitalWrite(Lane2[0], LOW);
  digitalWrite(Lane2[1], HIGH);
  digitalWrite(Lane2[2], LOW);

  digitalWrite(Lane1[0], LOW);
  digitalWrite(Lane1[1], HIGH);
  digitalWrite(Lane1[2], LOW);
  check();
  delay(3000);
  check();
}


void allRed()
{ 
  if(digitalRead(Lane1[2])==HIGH)
  {
       digitalWrite(Lane1[2],LOW);
       digitalWrite(Lane1[1],HIGH);
       delay(2000);  
  }
  if(digitalRead(Lane2[2])==HIGH)
  {
       digitalWrite(Lane2[2],LOW);
       digitalWrite(Lane2[1],HIGH);
       delay(2000);  
  }
if(digitalRead(Lane3[2])==HIGH)
  {
       digitalWrite(Lane3[2],LOW);
       digitalWrite(Lane3[1],HIGH);
       delay(2000);  
  }  
  if(digitalRead(Lane4[2])==HIGH)
  {
       digitalWrite(Lane4[2],LOW);
       digitalWrite(Lane4[1],HIGH);
       delay(2000);  
  }
  
   digitalWrite(Lane1[0], HIGH);
   digitalWrite(Lane3[0], HIGH);
   digitalWrite(Lane4[0], HIGH);
   digitalWrite(Lane2[0], HIGH);

   digitalWrite(Lane1[1], LOW);
   digitalWrite(Lane3[1], LOW);
   digitalWrite(Lane4[1], LOW);
   digitalWrite(Lane2[1], LOW);

   digitalWrite(Lane1[2], LOW);
   digitalWrite(Lane3[2], LOW);
   digitalWrite(Lane4[2], LOW);
   digitalWrite(Lane2[2], LOW);
   if(ledOn==HIGH)
   {
    allRed();   }
}

void loop() 
 {
 if(ledOn == HIGH)
 {
  allRed();
 }

  else{
   normal();
  }
  }
  
 

  void buttonPressed(){
    if (ledOn){
      ledOn = false;
      digitalWrite(0,LOW);
    }else{
      ledOn = true;
      digitalWrite(0,HIGH);
      }
  }